std::vector<std::vector<int>> spiralNumbers(int n) {
	const int arraySize = n;
	n *= n;
	std::vector<std::vector<int>> mv(arraySize);

	for (int i = 0; i < arraySize; ++i)
	{
		std::vector<int> v(arraySize);
		mv[i] = v;
	}

	int r = 0;
	int c = 0;
	int downAt[2]  = { 0, arraySize - 1 };
	int leftAt[2]  = { arraySize - 1, arraySize - 1};
	int upAt[2]    = { arraySize - 1, 0 };
	int rightAt[2] = { 1, 0 };

	bool right = true;
	bool down  = false;
	bool left  = false;
	bool up    = false;

	for (int i = 1; i <= n; ++i)
	{
		mv[r][c] = i;
		if (r == downAt[0] && c == downAt[1])
		{
			down = true;
			right = false;
			++downAt[0];
			--downAt[1];
		}
		else if (r == leftAt[0] && c == leftAt[1])
		{
			left = true;
			down = false;
			--leftAt[0];
			--leftAt[1];
		}
		else if (r == upAt[0] && c == upAt[1])
		{
			up = true;
			left = false;
			--upAt[0];
			++upAt[1];
		}
		else if (r == rightAt[0] && c == rightAt[1])
		{
			right = true;
			up = false;
			++rightAt[0];
			++rightAt[1];
		}
		if (right)
		{
			++c;
		}
		else if (down)
		{
			++r;
		}
		else if (left)
		{
			--c;
		}
		else if (up)
		{
			--r;
		}
	}

	return mv;
}
